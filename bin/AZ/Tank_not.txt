package AZ;

import java.awt.AlphaComposite;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class Tank implements GameEntity
{
	
	BufferedImage picture;
	int x, y, rectWidth, rectHeight, prevX, prevY;
	double rot, prevRot;
	
	public Tank(int x, int y, int rectWidth, int rectHeight, String s)
	{
		this.x = prevX = x;
		this.y = prevY = y;
		this.rectWidth = rectWidth;
		this.rectHeight = rectHeight;
		rot = prevRot = 0;
		try
		{
			Image p = ImageIO.read(new File("src/" + s)).getScaledInstance(rectWidth, rectHeight, Image.SCALE_DEFAULT);
			picture = new BufferedImage(Math.max(rectWidth, rectHeight), Math.max(rectWidth, rectHeight),
					BufferedImage.TYPE_INT_ARGB);
			if (rectWidth > rectHeight)
				picture.getGraphics().drawImage(p, 0, (rectWidth - rectHeight) / 2, null);
			else
				picture.getGraphics().drawImage(p, (rectHeight - rectWidth) / 2, 0, null);
		}
		catch (IOException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// image=s;
	}
	
	@Override
	public void Draw(Graphics2D g)
	{
		System.out.println(prevRot + " " + rot);
		Graphics2D g0 = (Graphics2D) picture.getGraphics();
		g0.getTransform().rotate(prevRot, rectWidth / 2, rectHeight / 2);
		g.setComposite(AlphaComposite.getInstance(AlphaComposite.CLEAR));
		g.drawImage(picture, prevX, prevY, null);
		
		g0.rotate(rot, rectWidth / 2, rectHeight / 2);
		// reset composite
		g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER));
		g.drawImage(picture, x, y, null);
		prevX = x;
		prevY = y;
		prevRot = rot;
	}
	
	// Átkerül a szerverbe, lehet csak oda kell
	// Kell külön szerver projekt?
	public void processKey(KeyEvent e)
	{
		switch (e.getKeyCode())
		{
			case KeyEvent.VK_W:
			{
				y--;
				break;
			}
			case KeyEvent.VK_S:
			{
				y++;
				break;
			}
			case KeyEvent.VK_A:
			{
				rot -= 0.01;
				break;
			}
			case KeyEvent.VK_D:
			{
				rot += 0.01;
				break;
			}
		}
	}
	
	@Override
	public void Tick()
	{
		// TODO Auto-generated method stub
		
	}
	
}
